spec3.hclus <- hclust(spec2.DTW)
plot(spec3.hclus,main="Spec. 3")
spec3.DTW=diss(spec3,"DWT")
spec3.hclus <- hclust(spec3.DTW)
plot(spec3.hclus,main="Spec. 3")
spec4.DTW=diss(spec4,"DWT")
spec4.hclus <- hclust(spec4.DTW)
plot(spec4.hclus,main="Spec. 4")
spec5.DTW=diss(spec5,"DWT")
spec5.hclus <- hclust(spec5.DTW)
plot(spec5.hclus,main="Spec. 5")
spec1.DTW=diss(spec1,"COR")
spec1.hclus <- hclust(spec1.DTW)
plot(spec1.hclus,main="Spec. 1")
spec2.DTW=diss(spec2,"COR")
spec2.hclus <- hclust(spec2.DTW)
plot(spec2.hclus,main="Spec. 2")
spec1.DTW=diss(spec1,"COR")
spec1.hclus <- hclust(spec1.DTW)
plot(spec1.hclus,main="Spec. 1")
spec2.DTW=diss(spec2,"COR")
spec2.hclus <- hclust(spec2.DTW)
plot(spec2.hclus,main="Spec. 2")
spec3.DTW=diss(spec3,"COR")
spec3.hclus <- hclust(spec3.DTW)
plot(spec3.hclus,main="Spec. 3")
spec4.DTW=diss(spec4,"COR")
spec4.hclus <- hclust(spec4.DTW)
plot(spec4.hclus,main="Spec. 4")
spec5.DTW=diss(spec5,"COR")
spec5.hclus <- hclust(spec5.DTW)
plot(spec5.hclus,main="Spec. 5")
require("roll")
require("FKF")
require("moments")
require("rtf")
lm.mle<-function(theta){
suma=0
for(i in 1:n){
suma=suma+dnorm(y[i]-theta[1]-theta[2]*x[i],0,theta[3],log=T)
}
-suma
}
OUss <- function(sigma.alfa, sigma.beta, epsilon){
Tt <- diag(2)
Zt <-array(0,dim=c(1,2,n))
for(i in 1:n) Zt[,,i]=c(1,x[i])
ct <- matrix(c(0),ncol=1)
dt <- matrix(c(0,0), nrow = 2)
GGt<- matrix(data=c(epsilon^2),nrow = 1,ncol=1)
HHt<- matrix(data=c(sigma.alfa^2,0,0,sigma.beta^2),nrow=2,ncol=2)
a0 <-  parametry.mle[1:2]
P0 <- matrix(data=c(0,0,0,0),nrow=2,ncol=2)
return(list(a0 = a0, P0 = P0, ct = ct, dt = dt, Zt = Zt, Tt = Tt, GGt = GGt,
HHt = HHt))
}
KF <- function(theta) {
sp <- OUss(theta[1], theta[2], theta[3])
ans <- fkf(a0 = sp$a0, P0 = sp$P0, dt = sp$dt, ct = sp$ct, Tt = sp$Tt,
Zt = sp$Zt, HHt = sp$HHt, GGt = sp$GGt, yt =matrix(y, nrow=1,ncol=n))
return(ans$att[2,])
}
KF.log <- function(theta) {
sp <- OUss(theta[1], theta[2], theta[3])
ans <- fkf(a0 = sp$a0, P0 = sp$P0, dt = sp$dt, ct = sp$ct, Tt = sp$Tt,
Zt = sp$Zt, HHt = sp$HHt, GGt = sp$GGt, yt =matrix(y, nrow=1,ncol=n))
return(-ans$logLik)
}
KF.err <- function(theta) {
sp <- OUss(theta[1], theta[2], theta[3] )
ans <- fkf(a0 = sp$a0, P0 = sp$P0, dt = sp$dt, ct = sp$ct, Tt = sp$Tt,
Zt = sp$Zt, HHt = sp$HHt, GGt = sp$GGt, yt =matrix(y, nrow=1,ncol=n))
return(sum(ans$vt[1,]^2))
}
OUss2 <- function(alpha, sigma.beta, epsilon){
Tt <- diag(1)
Zt <-array(0,dim=c(1,1,n))
for(i in 1:n) Zt[,,i]=lr.wig[i]
ct <- matrix(c(alpha),ncol=1)
dt <- matrix(c(0), nrow = 1)
GGt<- matrix(data=c(epsilon^2),nrow = 1,ncol=1)
HHt<- matrix(data=c(sigma.beta^2),nrow=1,ncol=1)
a0 <- parametry.mle[2]
P0 <- matrix(data=c(0),nrow=1,ncol=1)
return(list(a0 = a0, P0 = P0, ct = ct, dt = dt, Zt = Zt, Tt = Tt, GGt = GGt,
HHt = HHt))
}
KF2 <- function(theta) {
sp <- OUss2(theta[1], theta[2], theta[3])
ans <- fkf(a0 = sp$a0, P0 = sp$P0, dt = sp$dt, ct = sp$ct, Tt = sp$Tt,
Zt = sp$Zt, HHt = sp$HHt, GGt = sp$GGt, yt =matrix(y, nrow=1,ncol=n))
return(ans$att[1,])
}
KF2.log <- function(theta) {
sp <- OUss2(theta[1], theta[2], theta[3])
ans <- fkf(a0 = sp$a0, P0 = sp$P0, dt = sp$dt, ct = sp$ct, Tt = sp$Tt,
Zt = sp$Zt, HHt = sp$HHt, GGt = sp$GGt, yt =matrix(y, nrow=1,ncol=n))
return(-ans$logLik)
}
KF2.err <- function(theta) {
sp <- OUss2(theta[1], theta[2], theta[3] )
ans <- fkf(a0 = sp$a0, P0 = sp$P0, dt = sp$dt, ct = sp$ct, Tt = sp$Tt,
Zt = sp$Zt, HHt = sp$HHt, GGt = sp$GGt,yt =matrix(y, nrow=1,ncol=n))
return(sum(ans$vt[1,]^2))
}
OUss3 <- function(alpha,rho, sigma.beta, epsilon){
Tt <- rho*diag(1)
Zt <-array(0,dim=c(1,1,n))
for(i in 1:n) Zt[,,i]=lr.wig[i]
ct <- matrix(c(alpha),ncol=1)
dt <- matrix(c(0), nrow = 1)
GGt<- matrix(data=c(epsilon^2),nrow = 1,ncol=1)
HHt<- matrix(data=c(sigma.beta^2),nrow=1,ncol=1)
a0 <- parametry.mle[2]
P0 <- matrix(data=c(0),nrow=1,ncol=1)
return(list(a0 = a0, P0 = P0, ct = ct, dt = dt, Zt = Zt, Tt = Tt, GGt = GGt,
HHt = HHt))
}
KF3 <- function(theta) {
sp <- OUss3(theta[1], theta[2], theta[3], theta[4])
ans <- fkf(a0 = sp$a0, P0 = sp$P0, dt = sp$dt, ct = sp$ct, Tt = sp$Tt,
Zt = sp$Zt, HHt = sp$HHt, GGt = sp$GGt, yt =matrix(y, nrow=1,ncol=n))
return(ans$at[1,])
}
KF3.log <- function(theta) {
sp <- OUss3(theta[1], theta[2], theta[3], theta[4])
ans <- fkf(a0 = sp$a0, P0 = sp$P0, dt = sp$dt, ct = sp$ct, Tt = sp$Tt,
Zt = sp$Zt, HHt = sp$HHt, GGt = sp$GGt, yt =matrix(y, nrow=1,ncol=n))
return(-ans$logLik)
}
KF3.err <- function(theta) {
sp <- OUss3(theta[1], theta[2], theta[3], theta[4])
ans <- fkf(a0 = sp$a0, P0 = sp$P0, dt = sp$dt, ct = sp$ct, Tt = sp$Tt,
Zt = sp$Zt, HHt = sp$HHt, GGt = sp$GGt, yt =matrix(y, nrow=1,ncol=n))
return(sum(ans$vt[1,]^2))
}
OUss4 <- function(alpha, rho, teta, sigma.beta, epsilon){
Tt <- matrix(c(rho,1,0,0),ncol=2,nrow = 2,byrow = T)
Zt <-array(0,dim=c(1,2,n))
for(i in 1:n) Zt[,,i]=c(lr.wig[i],0)
ct <- matrix(c(alpha),ncol=1)
dt <- matrix(c(0,0), nrow = 2)
GGt<- matrix(data=c(epsilon^2),nrow = 1,ncol=1)
HHt<- matrix(data=c(sigma.beta^2,teta*sigma.beta^2,teta*sigma.beta^2,(teta^2)*sigma.beta^2),nrow=2,ncol=2,byrow = T)
a0 <- c(parametry.mle[2],0)
P0 <- matrix(data=0,nrow=2,ncol=2)
return(list(a0 = a0, P0 = P0, ct = ct, dt = dt, Zt = Zt, Tt = Tt, GGt = GGt,
HHt = HHt))
}
KF4 <- function(theta) {
sp <- OUss4(theta[1], theta[2], theta[3], theta[4], theta[5])
ans <- fkf(a0 = sp$a0, P0 = sp$P0, dt = sp$dt, ct = sp$ct, Tt = sp$Tt,
Zt = sp$Zt, HHt = sp$HHt, GGt = sp$GGt, yt =matrix(y, nrow=1,ncol=n))
return(ans$at[1,])
}
KF4.log <- function(theta) {
sp <- OUss4(theta[1], theta[2], theta[3], theta[4], theta[5])
ans <- fkf(a0 = sp$a0, P0 = sp$P0, dt = sp$dt, ct = sp$ct, Tt = sp$Tt,
Zt = sp$Zt, HHt = sp$HHt, GGt = sp$GGt, yt =matrix(y, nrow=1,ncol=n))
return(-ans$logLik)
}
KF4.err <- function(theta) {
sp <- OUss4(theta[1], theta[2], theta[3], theta[4], theta[5])
ans <- fkf(a0 = sp$a0, P0 = sp$P0, dt = sp$dt, ct = sp$ct, Tt = sp$Tt,
Zt = sp$Zt, HHt = sp$HHt, GGt = sp$GGt,  yt =matrix(y, nrow=1,ncol=n))
return(sum(ans$vt[1,]^2))
}
parametry4=rep(0,5)
hesjan4=rep(0,5)
log.KF4=0
OUss5 <- function(alpha,rho, beta, sigma.beta, epsilon){
Tt <- rho*diag(1)
Zt <-array(0,dim=c(1,1,n))
for(i in 1:n) Zt[,,i]=lr.wig[i]
ct <- matrix(c(alpha),ncol=1)
dt <- matrix(c((1-rho)*beta), nrow = 1)
GGt<- matrix(data=c(epsilon^2),nrow = 1,ncol=1)
HHt<- matrix(data=c(sigma.beta^2),nrow=1,ncol=1)
a0 <- parametry.mle[2]
P0 <- matrix(data=c(0),nrow=1,ncol=1)
return(list(a0 = a0, P0 = P0, ct = ct, dt = dt, Zt = Zt, Tt = Tt, GGt = GGt,
HHt = HHt))
}
KF5 <- function(theta) {
sp <- OUss5(theta[1], theta[2], theta[3], theta[4], theta[5])
ans <- fkf(a0 = sp$a0, P0 = sp$P0, dt = sp$dt, ct = sp$ct, Tt = sp$Tt,
Zt = sp$Zt, HHt = sp$HHt, GGt = sp$GGt,  yt =matrix(y, nrow=1,ncol=n))
return(ans$at[1,])
}
KF5.log <- function(theta) {
sp <- OUss5(theta[1], theta[2], theta[3], theta[4], theta[5])
ans <- fkf(a0 = sp$a0, P0 = sp$P0, dt = sp$dt, ct = sp$ct, Tt = sp$Tt,
Zt = sp$Zt, HHt = sp$HHt, GGt = sp$GGt,  yt =matrix(y, nrow=1,ncol=n))
return(-ans$logLik)
}
KF5.err <- function(theta) {
sp <- OUss5(theta[1], theta[2], theta[3], theta[4], theta[5])
ans <- fkf(a0 = sp$a0, P0 = sp$P0, dt = sp$dt, ct = sp$ct, Tt = sp$Tt,
Zt = sp$Zt, HHt = sp$HHt, GGt = sp$GGt,  yt =matrix(y, nrow=1,ncol=n))
return(sum(ans$vt[1,]^2))
}
OUss6 <- function(alpha, beta, sigma.alfa, sigma.beta, epsilon){
Tt <- 0*diag(2)
Zt <-array(0,dim=c(1,2,n))
for(i in 1:n) Zt[,,i]=c(1,lr.wig[i])
ct <- matrix(c(0),ncol=1)
dt <- matrix(c(alpha,beta), nrow = 2)
GGt<- matrix(data=c(epsilon^2),nrow = 1,ncol=1)
HHt<- matrix(data=c(sigma.alfa^2,0,0,sigma.beta^2),nrow=2,ncol=2)
a0 <- parametry.mle[1:2]
P0 <- matrix(data=0,nrow=2, ncol=2)
return(list(a0 = a0, P0 = P0, ct = ct, dt = dt, Zt = Zt, Tt = Tt, GGt = GGt,
HHt = HHt))
}
KF6 <- function(theta) {
sp <- OUss6(theta[1], theta[2], theta[3], theta[4], theta[5])
ans <- fkf(a0 = sp$a0, P0 = sp$P0, dt = sp$dt, ct = sp$ct, Tt = sp$Tt,
Zt = sp$Zt, HHt = sp$HHt, GGt = sp$GGt, yt =matrix(y, nrow=1,ncol=n))
return(ans$at[2,])
}
KF6.log <- function(theta) {
sp <- OUss6(theta[1], theta[2], theta[3], theta[4], theta[5])
ans <- fkf(a0 = sp$a0, P0 = sp$P0, dt = sp$dt, ct = sp$ct, Tt = sp$Tt,
Zt = sp$Zt, HHt = sp$HHt, GGt = sp$GGt, yt =matrix(y, nrow=1,ncol=n))
return(-ans$logLik)
}
KF6.err <- function(theta) {
sp <- OUss6(theta[1], theta[2], theta[3], theta[4], theta[5])
ans <- fkf(a0 = sp$a0, P0 = sp$P0, dt = sp$dt, ct = sp$ct, Tt = sp$Tt,
Zt = sp$Zt, HHt = sp$HHt, GGt = sp$GGt, yt =matrix(y, nrow=1,ncol=n))
return(sum(ans$vt[1,]^2))
}
OUss7 <- function(alpha, beta, sigma.beta, epsilon){
Tt <- 0*diag(1)
Zt <-array(0,dim=c(1,1,n))
for(i in 1:n) Zt[,,i]=x[i]
ct <- matrix(c(alpha),ncol=1)
dt <- matrix(c(beta), nrow = 1)
GGt<- matrix(data=c(epsilon^2),nrow = 1,ncol=1)
HHt<- matrix(data=c(sigma.beta^2),nrow=1,ncol=1)
a0 <- parametry.mle[2]
P0 <- matrix(data=0,nrow=1, ncol=1)
return(list(a0 = a0, P0 = P0, ct = ct, dt = dt, Zt = Zt, Tt = Tt, GGt = GGt,
HHt = HHt))
}
KF7 <- function(theta) {
sp <- OUss7(theta[1], theta[2], theta[3], theta[4])
ans <- fkf(a0 = sp$a0, P0 = sp$P0, dt = sp$dt, ct = sp$ct, Tt = sp$Tt,
Zt = sp$Zt, HHt = sp$HHt, GGt = sp$GGt, yt =matrix(y, nrow=1,ncol=n))
return(ans$at[1,])
}
KF7.log <- function(theta) {
sp <- OUss7(theta[1], theta[2], theta[3], theta[4])
ans <- fkf(a0 = sp$a0, P0 = sp$P0, dt = sp$dt, ct = sp$ct, Tt = sp$Tt,
Zt = sp$Zt, HHt = sp$HHt, GGt = sp$GGt,  yt =matrix(y, nrow=1,ncol=n))
return(-ans$logLik)
}
KF7.err <- function(theta) {
sp <- OUss7(theta[1], theta[2], theta[3], theta[4])
ans <- fkf(a0 = sp$a0, P0 = sp$P0, dt = sp$dt, ct = sp$ct, Tt = sp$Tt,
Zt = sp$Zt, HHt = sp$HHt, GGt = sp$GGt,  yt =matrix(y, nrow=1,ncol=n))
return(sum(ans$vt[1,]^2))
}
#############################################
#############################################
#############################################
#DANE  BZW
n=157
#dane za okres 2013-04-22 do 2018-02-09
dane2<-read.csv('C:/Users/user/Dropbox/phd/Dane/wig_m.csv', header = T)
str(dane2)
dane3<-matrix(dane2$Zamkniecie,nrow=n,ncol=1)
str(dane3)
dane2$Data[157]
dane4<-read.csv('C:/Users/user/Dropbox/phd/Dane/bzw_m.csv', header = T)
str(dane4)
dane5<-matrix(dane4$Zamkniecie,nrow=n,ncol=1)
dane=matrix(0,nrow=n,ncol=2)
dane[,1]=dane3[,1]
dane[,2]=dane5[,1]
dim(dane)
lr.wbk=1:(n-1)
lr.wig=1: (n-1)
for(i in 2:(n-1)){
lr.wbk[i-1]=(log(dane[i,2])-log(dane[i-1,2]))*100
lr.wig[i-1]=(log(dane[i,1])-log(dane[i-1,1]))*100
}
y=lr.wbk
x=lr.wig
KF1.opt<-optim(c(.1,1,1.1),KF.log,
method="L-BFGS-B",hessian = T )
parametry<-KF1.opt$par
hesjan=sqrt(diag(solve(KF1.opt$hessian)))
log.KF1<-KF1.opt$value
print("SP1:")
BZW.KF1=KF(parametry)
n=n-1
KF1.opt<-optim(c(.1,1,1.1),KF.log,
method="L-BFGS-B",hessian = T )
parametry<-KF1.opt$par
hesjan=sqrt(diag(solve(KF1.opt$hessian)))
log.KF1<-KF1.opt$value
print("SP1:")
BZW.KF1=KF(parametry)
BZW.KF1
KF1.opt$par
KF2.opt<-optim(c(0.005,.1,1.1),KF2.log,
method="L-BFGS-B",hessian = T,lower = c(-1,0.03,0))
parametry2<-KF2.opt$par
hesjan2=sqrt(diag(solve(KF2.opt$hessian)))
log.KF2<-KF2.opt$value
print("SP2:")
BZW.KF2=KF2(parametry2)
KF3.opt<-optim(c(0.005,0.9,0.05,1.1),KF3.log,
method="L-BFGS-B",hessian = T,lower=c(-Inf,-Inf,0,0))
parametry3<-KF3.opt$par
hesjan3=sqrt(diag(solve(KF3.opt$hessian)))
log.KF3<-KF3.opt$value
print("SP3:")
BZW.KF3=KF3(parametry3)
KF4.opt<-optim(c(0.005,0.99,.15,0.05,1.1),KF4.log,
method="L-BFGS-B",hessian = T,lower=c(-Inf,-Inf,-Inf,0,0))
parametry4<-KF4.opt$par
hesjan4=sqrt(diag(solve(KF4.opt$hessian)))
log.KF4<-KF4.opt$value
print("SP4:")
BZW.KF4=KF4(parametry4)
KF5.opt<-optim(c(0.005,0.2,1.15,0.5,1.1),KF5.log,
method="L-BFGS-B",hessian = T,lower=c(-Inf,-Inf,-Inf,0,0))
parametry5<-KF5.opt$par
hesjan5=sqrt(diag(solve(KF5.opt$hessian)))
log.KF5<-KF5.opt$value
print("SP5:")
BZW.KF5=KF5(parametry5)
KF6.opt<-optim(c(0.005,1.5,0.15,0.5,1.1),KF6.log,
method="L-BFGS-B",hessian = T,lower=c(-Inf,-Inf,-Inf,0,0))
parametry6<-KF6.opt$par
hesjan6=sqrt(diag(solve(KF6.opt$hessian)))
log.KF6<-KF6.opt$value
print("SP6:")
BZW.KF6=KF6(parametry6)
KF7.opt<-optim(c(0.005,1.2,0.5,1.1),KF7.log,
method="L-BFGS-B",hessian = T,lower=c(-Inf,-Inf,0,0))
parametry7<-KF7.opt$par
hesjan7=sqrt(diag(solve(KF7.opt$hessian)))
log.KF7=KF7.opt$value
print("SP7:")
BZW.KF7=KF7(parametry7)
mle.opt<-optim(c(0,1,1),lm.mle, method="L-BFGS-B",hessian = T)
parametry.mle<-mle.opt$par
log.mle<-mle.opt$value
print("Model liniowy:")
BZW.beta=parametry.mle[2]
BZW.beta
par(mfrow=c(3,3))
plot(BZW.KF1[2:(n-1)],type='l', ylab=expression(beta),xlab='Spec. 1',lwd=2)
plot(BZW.KF2[2:(n-1)],type='l', ylab=expression(beta),xlab='Spec. 2',lwd=2)
plot(BZW.KF3[2:(n-1)],type='l', ylab=expression(beta),xlab='Spec. 3',lwd=2)
plot(BZW.KF4[2:(n-1)],type='l', ylab=expression(beta),xlab='Spec. 4',lwd=2)
plot(BZW.KF5[2:(n-1)],type='l', ylab=expression(beta),xlab='Spec. 5',lwd=2)
plot(BZW.KF6[2:(n-1)],type='l', ylab=expression(beta),xlab='Spec. 6',lwd=2)
plot(BZW.KF7[2:(n-1)],type='l', ylab=expression(beta),xlab='Spec. 7',lwd=2)
par(mfrow=c(1,1))
plot(BZW.KF1[2:(n-1)],type='l', ylab=expression(beta),xlab='Spec. 1',lwd=2)
lines(BZW.KF2[2:(n-1)],col='red')
lines(BZW.KF3[2:(n-1)],col='blue')
lines(BZW.KF4[2:(n-1)],col='green')
plot(BZW.KF1[2:(n-1)],type='l', ylab=expression(beta),xlab='Spec. 1',lwd=2)
lines(BZW.KF2[2:(n-1)],col='red',lwd=2)
lines(BZW.KF3[2:(n-1)],col='blue',lwd=2)
lines(BZW.KF4[2:(n-1)],col='green',lwd=2)
lines(BZW.KF5[2:(n-1)],col='green',lwd=2)
plot(BZW.KF1[2:(n-1)],type='l', ylab=expression(beta),xlab='Spec. 1',lwd=2)
lines(BZW.KF2[2:(n-1)],col='red',lwd=2)
lines(BZW.KF3[2:(n-1)],col='blue',lwd=2)
lines(BZW.KF4[2:(n-1)],col='green',lwd=2)
lines(BZW.KF5[2:(n-1)],col='brown')
plot(BZW.KF1[2:(n-1)],type='l', ylab=expression(beta),xlab='Spec. 1',lwd=2)
lines(BZW.KF2[2:(n-1)],col='red')
lines(BZW.KF3[2:(n-1)],col='blue')
lines(BZW.KF4[2:(n-1)],col='green')
lines(BZW.KF5[2:(n-1)],col='brown')
lines(BZW.KF6[2:(n-1)],col='grey')
lines(BZW.KF7[2:(n-1)],col='black')
plot(BZW.KF1[2:(n-1)],type='l', ylab=expression(beta),xlab='Spec. 1',lwd=2)
lines(BZW.KF2[2:(n-1)],col='red')
lines(BZW.KF3[2:(n-1)],col='blue')
lines(BZW.KF4[2:(n-1)],col='green')
lines(BZW.KF5[2:(n-1)],col='brown')
lines(BZW.KF6[2:(n-1)],col='grey')
BZW.KF6[2:(n-1)]
BZW.KF6[2:(n-1)]
plot(BZW.KF1[2:n],col='blue',type='l',lty=1,
ylab=expression(beta),xlab='czas',main='BZW',ylim=c(0.3,1.7),lwd=2)
lines(BZW.KF2[2:n],col='orange',lty=1,lwd=2)
lines(BZW.KF3[2:n],col='darkgreen',lty=1,lwd=2)
lines(BZW.KF4[2:n],col='brown',lty=1,lwd=2)
lines(BZW.KF5[2:n],col='red',lty=1,lwd=2)
lines(BZW.KF6[2:n],col='green',lty=1,lwd=2)
lines(BZW.KF7[2:n],col='grey',lty=1,lwd=2)
legend(x=0, y=0.8, legend=c('Spec. 1','Spec. 2','Spec. 3',
'Spec. 4','Spec. 5','Spec. 6', 'Spec. 7'),
lty=1,lwd=2, col=c('blue','orange','darkgreen','brown', "red", 'green','grey'))
legend(x=0, y=0.8, legend=c('Spec. 1','Spec. 2','Spec. 3',
'Spec. 4','Spec. 5','Spec. 6'),
lty=1,lwd=2, col=c('back','red','blue','green', "brown", 'grey'))
plot(BZW.KF1[2:(n-1)],type='l', ylab=expression(beta),xlab='Spec. 1',lwd=2)
lines(BZW.KF2[2:(n-1)],col='red')
lines(BZW.KF3[2:(n-1)],col='blue')
lines(BZW.KF4[2:(n-1)],col='green')
lines(BZW.KF5[2:(n-1)],col='brown')
lines(BZW.KF6[2:(n-1)],col='grey')
legend(x=0, y=0.8, legend=c('Spec. 1','Spec. 2','Spec. 3',
'Spec. 4','Spec. 5','Spec. 6'),
lty=1,lwd=2, col=c('back','red','blue','green', "brown", 'grey'))
plot(BZW.KF1[2:(n-1)],type='l', ylab=expression(beta),xlab='Spec. 1',lwd=2)
lines(BZW.KF2[2:(n-1)],col='red')
lines(BZW.KF3[2:(n-1)],col='blue')
lines(BZW.KF4[2:(n-1)],col='green')
lines(BZW.KF5[2:(n-1)],col='brown')
lines(BZW.KF6[2:(n-1)],col='grey')
legend(x=0, y=0.8, legend=c('Spec. 1','Spec. 2','Spec. 3',
'Spec. 4','Spec. 5','Spec. 6'),
lty=1,lwd=2, col=c('black','red','blue','green', "brown", 'grey'))
par(mfrow=c(3,3))
plot(BZW.KF1[2:(n-1)],type='l', ylab=expression(beta),xlab='Spec. 1',lwd=2)
plot(BZW.KF2[2:(n-1)],type='l', ylab=expression(beta),xlab='Spec. 2',lwd=2)
plot(BZW.KF3[2:(n-1)],type='l', ylab=expression(beta),xlab='Spec. 3',lwd=2)
plot(BZW.KF4[2:(n-1)],type='l', ylab=expression(beta),xlab='Spec. 4',lwd=2)
plot(BZW.KF5[2:(n-1)],type='l', ylab=expression(beta),xlab='Spec. 5',lwd=2)
plot(BZW.KF6[2:(n-1)],type='l', ylab=expression(beta),xlab='Spec. 6',lwd=2)
plot(BZW.KF7[2:(n-1)],type='l', ylab=expression(beta),xlab='Spec. 7',lwd=2)
par(mfrow=c(1,1))
plot(BZW.KF1[2:(n-1)],type='l', ylab=expression(beta),xlab='Spec. 1',lwd=2)
lines(BZW.KF2[2:(n-1)],col='red')
lines(BZW.KF3[2:(n-1)],col='blue')
lines(BZW.KF4[2:(n-1)],col='green')
lines(BZW.KF5[2:(n-1)],col='brown')
lines(BZW.KF6[2:(n-1)],col='grey')
legend(x=0, y=0.8, legend=c('Spec. 1','Spec. 2','Spec. 3',
'Spec. 4','Spec. 5','Spec. 6'),
lty=1,lwd=2, col=c('black','red','blue','green', "brown", 'grey'))
par(mfrow=c(3,3))
plot(BZW.KF1[1:(n-1)],type='l', ylab=expression(beta),xlab='Spec. 1',lwd=2)
plot(BZW.KF2[1:(n-1)],type='l', ylab=expression(beta),xlab='Spec. 2',lwd=2)
plot(BZW.KF3[1:(n-1)],type='l', ylab=expression(beta),xlab='Spec. 3',lwd=2)
plot(BZW.KF4[1:(n-1)],type='l', ylab=expression(beta),xlab='Spec. 4',lwd=2)
plot(BZW.KF5[1:(n-1)],type='l', ylab=expression(beta),xlab='Spec. 5',lwd=2)
plot(BZW.KF6[1:(n-1)],type='l', ylab=expression(beta),xlab='Spec. 6',lwd=2)
plot(BZW.KF7[1:(n-1)],type='l', ylab=expression(beta),xlab='Spec. 7',lwd=2)
par(mfrow=c(1,1))
par(mfrow=c(3,3))
plot(BZW.KF1[2:(n-1)],type='l', ylab=expression(beta),xlab='Spec. 1',lwd=2)
plot(BZW.KF2[2:(n-1)],type='l', ylab=expression(beta),xlab='Spec. 2',lwd=2)
plot(BZW.KF3[2:(n-1)],type='l', ylab=expression(beta),xlab='Spec. 3',lwd=2)
plot(BZW.KF4[2:(n-1)],type='l', ylab=expression(beta),xlab='Spec. 4',lwd=2)
plot(BZW.KF5[2:(n-1)],type='l', ylab=expression(beta),xlab='Spec. 5',lwd=2)
plot(BZW.KF6[2:(n-1)],type='l', ylab=expression(beta),xlab='Spec. 6',lwd=2)
plot(BZW.KF7[2:(n-1)],type='l', ylab=expression(beta),xlab='Spec. 7',lwd=2)
par(mfrow=c(1,1))
plot(BZW.KF1[2:(n-1)],type='l', ylab=expression(beta),xlab='time',lwd=2)
lines(BZW.KF2[2:(n-1)],col='red')
lines(BZW.KF3[2:(n-1)],col='blue')
lines(BZW.KF4[2:(n-1)],col='green')
lines(BZW.KF5[2:(n-1)],col='brown')
lines(BZW.KF6[2:(n-1)],col='grey')
legend(x=0, y=0.8, legend=c('Spec. 1','Spec. 2','Spec. 3',
'Spec. 4','Spec. 5','Spec. 6'),
lty=1,lwd=2, col=c('black','red','blue','green', "brown", 'grey'))
rm(list = ls())
rm(list = ls())
rm(list = ls())
#poczatek okresu badania
data.poczatkowa='1996-01'
#koniec okresu badania
data.koncowa='2016-12'
############################################
#zwroty do badania
zwroty=dane[paste(data.poczatkowa,"/",data.koncowa,sep="")]
zworty_dat=list(T=length(zwroty),
y=as.vector(zwroty))
rstan_options(auto_write = TRUE)
#options(mc.cores = parallel::detectCores())
setwd("C:/Users/user/Dropbox/phd/Skrypty do R/Leverage-effect/Skypty")
fit <- stan(file = 'svl.stan', data =zworty_dat ,
iter = 10000, warmup=1000, chains = 1)
#skrypt do basic stochastic volatility z uzyciem RStan
library(rstan)
library(quantmod)
library(rstudioapi)
library(plotMCMC)
#rm(list = ls())
setwd("C:/Users/user/Dropbox/phd/Skrypty do R/Leverage-effect/Dane")
#ladowanie zwrotow z pliku
dane<-read.csv.zoo('C:/Users/user/Dropbox/phd/Skrypty do R/Leverage-effect/Dane/wig_zwroty.csv', header = T,
sep=',')
dane=as.xts(dane)
############################################
#poczatek okresu badania
data.poczatkowa='1996-01'
#koniec okresu badania
data.koncowa='2016-12'
############################################
#zwroty do badania
zwroty=dane[paste(data.poczatkowa,"/",data.koncowa,sep="")]
zworty_dat=list(T=length(zwroty),
y=as.vector(zwroty))
rstan_options(auto_write = TRUE)
#options(mc.cores = parallel::detectCores())
setwd("C:/Users/user/Dropbox/phd/Skrypty do R/Leverage-effect/Skypty")
fit <- stan(file = 'svl.stan', data =zworty_dat ,
iter = 10000, warmup=1000, chains = 1)
